---
title: "BMS 225A Workshop 2"
output:
  html_document: default
  pdf_document: default
date: "2023-10-12"
---


# Weather Data Analysis

```{r load_library}
library(tidyverse)
```

```{r Read in data}
sf_weather <- read.csv("../raw_data/sf_weather_2023.csv")

head
colnames(sf_weather)
```

```{r Subet the data}
select(sf_weather, DATE)

date <- sf_weather%>%
  select(DATE)

head(date)
```

```{r Subset and split out data}
sf_weather_temp <- sf_weather %>%
  select(c(DATE, TMAX,TMIN))%>%
  na.omit()%>%
  separate(DATE, c("YEAR", "MONTH", "DAY"), sep= "-", remove = FALSE) %>%
  filter(YEAR == "2021")%>%
  mutate(TAVG = ( (TMAX + TMIN)/2 ) ) %>%
  group_by(MONTH) %>%
  summarize(MAX_MO_TEMP = max(TAVG))

head(sf_weather_temp)
knitr::opts_chunk$set(echo = TRUE)
```

```{r Plotting our data}
plot(sf_weather_temp)
```

```{r Apply function}
yearly_subsetter <- function(year){ 
  year_subset <- sf_weather_temp <- sf_weather %>%
  select(c(DATE, TMAX,TMIN))%>%
  na.omit()%>%
  separate(DATE, c("YEAR", "MONTH", "DAY"), sep= "-", remove = FALSE) %>%
  filter(YEAR == year)%>%
  mutate(TAVG = ( (TMAX + TMIN)/2 ) ) %>%
  group_by(MONTH) %>%
  summarize(MAX_MO_TEMP = max(TAVG))

return(year_subset)
}

yearly_subsetter("2020")
```

```{r Apply function to data}
year_var <- "1980"

plot(yearly_subsetter(year = year_var), main = year_var)
```

```{r Apply function wit Loops, fig.height=6, fig.width=4}
for (my_year_var in c("1970", "1980", "1990", "2000") ){
  plot(yearly_subsetter(year = my_year_var), main = my_year_var)
}
```
## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r}

```
## Including Plots
```{r}

```

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
